{"version":3,"sources":["index.js"],"names":["audio","document","getElementById","App","props","handlePlayPause","state","isPlaying","clearInterval","loop","setState","setInterval","clockCount","currentTimer","breakCount","sessionCount","play","handleReset","pause","currentTime","convertToTime","count","minutes","Math","floor","seconds","handleBreakDecrease","handleBreakIncrease","handleSessionDecrease","handleSessionIncrease","undefined","this","breakProps","title","handleDecrease","handleIncrease","sessionProps","className","SetTimer","id","onClick","React","Component","toLowerCase","ReactDOM","render"],"mappings":"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","file":"static/js/main.063a75ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst audio = document.getElementById(\"beep\");\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.loop = undefined;\r\n        this.state={\r\n            breakCount:5,\r\n            sessionCount:25,\r\n            clockCount: 25*60,\r\n            currentTimer:'Session',\r\n            isPlaying: false,\r\n        }\r\n\r\n    }\r\n    \r\n    handlePlayPause = () => {\r\n        const { isPlaying } = this.state;\r\n\r\n        if(isPlaying) {\r\n            clearInterval(this.loop);\r\n\r\n            this.setState({\r\n                isPlaying: false\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isPlaying:true\r\n            });\r\n\r\n            this.loop = setInterval(()=> {\r\n                const {clockCount, currentTimer, breakCount, sessionCount} = this.state;\r\n\r\n                if(clockCount === 0) {\r\n                    this.setState({\r\n                        currentTimer: currentTimer === 'Session' ? 'Break' :'Session',\r\n                        clockCount: currentTimer==='Session' ? breakCount*60: sessionCount*60\r\n                    })\r\n                    audio.play();\r\n                } else {\r\n                    this.setState({\r\n                        clockCount: clockCount-1\r\n                    });\r\n                }\r\n\r\n\r\n            }, 1000);\r\n\r\n        }\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            breakCount:5,\r\n            sessionCount:25,\r\n            clockCount: 25*60,\r\n            currentTimer:'Session',\r\n            isPlaying: false,\r\n        });\r\n\r\n        clearInterval(this.loop)\r\n        audio.pause();\r\n        audio.currentTime=0;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.loop)\r\n    }\r\n    \r\n    convertToTime = (count) => {\r\n      let minutes = Math.floor(count/60);\r\n      let seconds = count % 60;\r\n      \r\n      minutes = minutes < 10? ('0' +seconds) : seconds;\r\n      seconds = seconds < 10? ('0' +seconds) : seconds;\r\n      return `${minutes}:${seconds}`\r\n    }\r\n    \r\n    handleBreakDecrease = () => {\r\n        const {breakCount} = this.state\r\n        if(breakCount>1) {\r\n        this.setState({\r\n            breakCount: breakCount-1\r\n        });\r\n        }\r\n    }\r\n\r\n    handleBreakIncrease = () => {\r\n        const {breakCount} = this.state\r\n        if (breakCount < 60) {\r\n        this.setState({\r\n            breakCount: breakCount+1\r\n        });\r\n        }\r\n    }\r\n\r\n    handleSessionDecrease = () => {\r\n        const {sessionCount} = this.state\r\n\r\n        if(sessionCount>1) {\r\n        this.setState({\r\n            sessionCount: sessionCount-1\r\n        });\r\n        }\r\n    }\r\n\r\n    handleSessionIncrease = () => {\r\n        const {sessionCount} = this.state\r\n\r\n        if(sessionCount<60) {\r\n        this.setState({\r\n            sessionCount: sessionCount+1\r\n        });\r\n        }\r\n    }\r\n\r\n    render(){\r\n      const {\r\n        breakCount,\r\n        sessionCount, \r\n        clockCount, \r\n        currentTimer\r\n        } = this.state;\r\n      \r\n      const breakProps = {\r\n        title: 'Break',\r\n        count: breakCount,\r\n        handleDecrease: this.handleBreakDecrease,\r\n        handleIncrease: this.handleBreakIncrease,\r\n      }\r\n      \r\n      const sessionProps={\r\n        title: 'Session',\r\n        count: sessionCount,\r\n        handleDecrease: this.handleSessionDecrease,\r\n        handleIncrease: this.handleSessionIncrease, \r\n      }\r\n      \r\n      return (\r\n        <div>\r\n          <div className=\"flex\">\r\n            <SetTimer {...breakProps}/>\r\n            <SetTimer {...sessionProps}/>\r\n          </div>\r\n          \r\n          \r\n          <div className=\"clock-container\">\r\n            <h1 id=\"timer-label\">{currentTimer}</h1>\r\n            <span id=\"time-left\">{this.convertToTime(clockCount)}</span>\r\n            \r\n\r\n\r\n            \r\n            <div className=\"flex\">\r\n          <button id=\"start_stop\" onClick={this.handlePlayPause}>\r\n          <i className=\"fas fa-play\" />\r\n          </button>\r\n          <button id=\"reset\"onClick={this.handleReset}><i className=\"fas fa-sync\"/></button>\r\n          </div>\r\n       </div>\r\n     </div>\r\n  \r\n      );\r\n    }\r\n  }\r\n  \r\n  const SetTimer=(props) => {\r\n    const id = props.title.toLowerCase();\r\n    return(\r\n      <div className = \"timer-container\">\r\n          <h1 id={`${id}-label`}>{props.title}</h1>\r\n      <div className=\"flex actions-wrapper\">\r\n          <button id={`${id}-decrement`} onClick={props.handleDecrease}><i className=\"fas fa-minus\" /></button>\r\n\r\n          <span id={`${id}-length`}>{props.count}</span>\r\n\r\n          <button id={`${id}-increment`}onClick={props.handleIncrease}><i className=\"fas fa-plus\"/></button>\r\n      </div>\r\n      </div>\r\n  );\r\n    }\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}